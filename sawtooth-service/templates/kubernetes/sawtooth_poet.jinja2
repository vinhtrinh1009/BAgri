---
apiVersion: v1
kind: List

items:
{% set temp = namespace(index=32002) %}
{%  for i in range(0,data['number_peer']) %}
{% set temp.index = (temp.index+1) %}
{% if i== 0 %}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: {{ data['name'] }}-0
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: {{ data['name'] }}-0
    template:
      metadata:
        labels:
          name: {{ data['name'] }}-0
      spec:
        containers:
          - name: sawtooth-poet-engine
            image: hyperledger/sawtooth-poet-engine:1.1.3
            command:
              - bash
            args:
              - -c
              - "if [ ! -f /poet-shared/poet-enclave-measurement ]; then \
                    poet enclave measurement >> /poet-shared/poet-enclave-measurement; \
                fi && \
                if [ ! -f /poet-shared/poet-enclave-basename ]; then \
                    poet enclave basename >> /poet-shared/poet-enclave-basename; \
                fi && \
                if [ ! -f /poet-shared/simulator_rk_pub.pem ]; then \
                    cp /etc/sawtooth/simulator_rk_pub.pem /poet-shared; \
                fi && \
                while [ ! -f /poet-shared/validator-0/keys/validator.priv ]; do \
                    echo 'waiting for validator key'; \
                    sleep 1; \
                done && \
                cp -a /poet-shared/validator-0/keys /etc/sawtooth && \
                poet registration create -k /etc/sawtooth/keys/validator.priv -o /poet-shared/poet.batch && \
                poet-engine -C tcp://$HOSTNAME:5050 --component tcp://$HOSTNAME:4004"
            volumeMounts:
                - name: poet-shared-0
                  mountPath: "/poet-shared"

          - name: sawtooth-poet-validator-registry-tp
            image: hyperledger/sawtooth-poet-validator-registry-tp:1.1
            command:
              - bash
            args:
              - -c
              - "poet-validator-registry-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:1.1.3
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:1.1.3
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:1.1.3
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:1.1.3
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            command:
              - bash
            args:
              - -c
              - "if [ ! -e /etc/sawtooth/keys/validator.priv ]; then \
                   sawadm keygen; \
                 fi && \
                 mkdir -p /poet-shared/validator-0 || true && \
                 cp -a /etc/sawtooth/keys /poet-shared/validator-0 && \
                 while [ ! -f /poet-shared/poet-enclave-measurement ]; do \
                     echo 'waiting for poet-enclave-measurement'; \
                     sleep 1; \
                 done && \
                 while [ ! -f /poet-shared/poet-enclave-basename ]; do \
                     echo 'waiting for poet-enclave-basename'; \
                     sleep 1; \
                 done && \
                 while [ ! -f /poet-shared/poet.batch ]; do \
                     echo 'waiting for poet.batch'; \
                     sleep 1; \
                 done && \
                 if [ ! -e /root/.sawtooth/keys/my_key.priv ]; then \
                   sawtooth keygen my_key; \
                 fi && \
                 cp /poet-shared/poet.batch / && \
                 if [ ! -e config-genesis.batch ]; then \
                   sawset genesis -k /root/.sawtooth/keys/my_key.priv -o config-genesis.batch; \
                 fi && \
                 if [ ! -e config.batch ]; then \
                   sawset proposal create \
                     -k /root/.sawtooth/keys/my_key.priv \
                     sawtooth.consensus.algorithm.name=PoET \
                     sawtooth.consensus.algorithm.version=0.1 \
                     sawtooth.poet.report_public_key_pem=\"$(cat /poet-shared/simulator_rk_pub.pem)\" \
                     sawtooth.poet.valid_enclave_measurements=$(cat /poet-shared/poet-enclave-measurement) \
                     sawtooth.poet.valid_enclave_basenames=$(cat /poet-shared/poet-enclave-basename) \
                     sawtooth.poet.initial_wait_time=15 \
                     sawtooth.poet.target_wait_time=15 \
                     sawtooth.publisher.max_batches_per_block=200 \
                     sawtooth.poet.key_block_claim_limit=100000 \
                     sawtooth.poet.ztest_minimum_win_count=100000 \
                     -o config.batch; \
                 fi && \
                 if [ ! -e /var/lib/sawtooth/genesis.batch ]; then \
                   sawadm genesis config-genesis.batch config.batch poet.batch; \
                 fi && \
                 sawtooth-validator -vv \
                   --endpoint tcp://{{data['public_ip']}}:32003 \
                   --bind component:tcp://eth0:4004 \
                   --bind consensus:tcp://eth0:5050 \
                   --scheduler parallel \
                   --peering static \
                   --bind network:tcp://eth0:8800{% for j in range(1, data['number_peer']) %} --peers tcp://{{data['public_ip']}}:{{32003+j}}{{ " " if not loop.last }}{{ "\"" if loop.last }}{% endfor %}

            volumeMounts:
                - name: poet-shared-0
                  mountPath: "/poet-shared"


        volumes:
          - name: poet-shared-0
            emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-0
  spec:
    type: NodePort
    selector:
      name: {{ data['name'] }}-0
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
        nodePort: 32001
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
        nodePort: 32002
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800
        nodePort: 32003
{% else %}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: {{ data['name'] }}-{{ i }}
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: {{ data['name'] }}-{{ i }}
    template:
      metadata:
        labels:
          name: {{ data['name'] }}-{{ i }}
      spec:
        containers:

          - name: sawtooth-poet-engine
            image: hyperledger/sawtooth-poet-engine:1.1.3
            command:
              - bash
            args:
              - -c
              - "while [ ! -f /poet-shared/validator-{{ i }}/keys/validator.priv ]; do \
                    echo 'waiting for validator key'; \
                    sleep 1; \
                done && \
                cp -a /poet-shared/validator-{{ i }}/keys /etc/sawtooth && \
                poet-engine -C tcp://$HOSTNAME:5050 --component tcp://$HOSTNAME:4004"
            volumeMounts:
                - name: poet-shared-{{ i }}
                  mountPath: "/poet-shared"

          - name: sawtooth-poet-validator-registry-tp
            image: hyperledger/sawtooth-poet-validator-registry-tp:1.1
            command:
              - bash
            args:
              - -c
              - "poet-validator-registry-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:1.1.3
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:1.1.3
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:chime
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:1.1.3
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            command:
              - bash
            args:
              - -c
              - "sawadm keygen && \
                 mkdir -p /poet-shared/validator-{{ i }} || true && \
                 cp -a /etc/sawtooth/keys /poet-shared/validator-{{ i }} && \
                 sawtooth keygen my_key && \
                 sawtooth-validator -vv \
                   --endpoint tcp://{{data['public_ip']}}:{{temp.index}} \
                   --bind component:tcp://eth0:4004 \
                   --bind consensus:tcp://eth0:5050 \
                   --bind network:tcp://eth0:8800 
                   --peering dynamic \
                   --seeds tcp://{{data['public_ip']}}:32003 \
                   --scheduler parallel \
                   --network-auth trust "

            volumeMounts:
                - name: poet-shared-{{ i }}
                  mountPath: "/poet-shared"


        volumes:
          - name: poet-shared-{{ i }}
            emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-{{ i }}
  spec:
    type: NodePort
    selector:
      name: {{ data['name'] }}-{{ i }}
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800
        nodePort: {{temp.index}}
{% endif %}
{% endfor %}
