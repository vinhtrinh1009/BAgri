COUNTER=1
MAX_RETRY=5
MIN_SLEEP=3
MAX_SLEEP=10

verifyResult() {
  if [ $1 -ne 0 ]; then
    echo "!!!!!!!!!!!!!!! "$2" !!!!!!!!!!!!!!!!"
    echo "=== ERROR !!! FAILED to execute End-2-End Scenario ==="
    echo
    exit 1
  fi
}

joinChannelWithRetry() {

    peer channel fetch 0 /fabric/${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} --ordererTLSHostnameOverride orderer.{{data['network_name']}}.com --tls --cafile ${ORDERER_CA}
    set -x
    peer channel join -b /fabric/${CHANNEL_NAME}.block >&log.txt
    res=$?
    set +x
    cat log.txt
    if [ $res -ne 0 -a $COUNTER -lt $MAX_RETRY ]; then
        rm -rf /fabric/${CHANNEL_NAME}.block
        COUNTER=$(expr $COUNTER + 1)
        echo "${CORE_PEER_ADDRESS} failed to join the channel, Retry after ${MAX_SLEEP} seconds"
        sleep $MAX_SLEEP
        joinChannelWithRetry
    else
        rm -rf /fabric/${CHANNEL_NAME}.block
        COUNTER=1
    fi
    verifyResult $res "After $MAX_RETRY attempts, ${CORE_PEER_ADDRESS} has failed to join channel '${CHANNEL_NAME}' "
}

export CORE_PEER_TLS_ENABLED=true
export ORDERER_CA="/fabric/crypto-config/ordererOrganizations/{{data['network_name']}}.com/orderers/orderer.{{data['network_name']}}.com/msp/tlscacerts/tlsca.{{data['network_name']}}.com-cert.pem"
export ORDERER_URL="{{data['nodeIp']}}:{{calOrdererNodePort()}}"
export CORE_PEER_ADDRESSAUTODETECT="false"
export CORE_PEER_NETWORKID="nid1"
export CHANNEL_NAME="{{data['network_name']}}-appchannel"
export FABRIC_CFG_PATH="/etc/hyperledger/fabric"


export CORE_PEER_LOCALMSPID="{{data['orgs'][0]['name']|capitalize}}MSP"
export CORE_PEER_TLS_ROOTCERT_FILE="/fabric/crypto-config/peerOrganizations/{{data['orgs'][0]['name']}}.{{data['network_name']}}.com/peers/peer0.{{data['orgs'][0]['name']}}.{{data['network_name']}}.com/tls/ca.crt"
export CORE_PEER_MSPCONFIGPATH="/fabric/crypto-config/peerOrganizations/{{data['orgs'][0]['name']}}.{{data['network_name']}}.com/users/Admin@{{data['orgs'][0]['name']}}.{{data['network_name']}}.com/msp"
export CORE_PEER_ADDRESS="{{data['nodeIp']}}:{{calPeerNodePort(0, 0)}}"
set -x
peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} --ordererTLSHostnameOverride orderer.{{data['network_name']}}.com  -f /fabric/configtxgen/${CHANNEL_NAME}.tx --outputBlock /fabric/${CHANNEL_NAME}.block --tls --cafile ${ORDERER_CA}
res=$?
set +x
verifyResult $res "Channel creation failed"
echo "=== Channel '${CHANNEL_NAME}' created ==="
echo

sleep $MAX_SLEEP

{% for org in data['orgs'] %}
{% set org_index = loop.index - 1%}
export CORE_PEER_LOCALMSPID="{{org['name']|capitalize}}MSP"
export CORE_PEER_MSPCONFIGPATH="/fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['network_name']}}.com/users/Admin@{{org['name']}}.{{data['network_name']}}.com/msp"

    {% for peer_index in range(org['number_peer']) %}
    {% set nodePort = calPeerNodePort(org_index, peer_index) %}
export CORE_PEER_ADDRESS="{{data['nodeIp']}}:{{nodePort}}"
export CORE_PEER_TLS_ROOTCERT_FILE="/fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['network_name']}}.com/peers/peer{{peer_index}}.{{org['name']}}.{{data['network_name']}}.com/tls/ca.crt"
joinChannelWithRetry
echo "=== ${CORE_PEER_ADDRESS} joined channel '${CHANNEL_NAME}'===="
echo
sleep $MAX_SLEEP

    {% endfor %}
{% endfor %}

{% for org in data['orgs'] %}
{% set org_index = loop.index - 1%}
export CORE_PEER_LOCALMSPID="{{org['name']|capitalize}}MSP"
export CORE_PEER_MSPCONFIGPATH="/fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['network_name']}}.com/users/Admin@{{org['name']}}.{{data['network_name']}}.com/msp"
export CORE_PEER_TLS_ROOTCERT_FILE="/fabric/crypto-config/peerOrganizations/{{org['name']}}.{{data['network_name']}}.com/peers/peer0.{{org['name']}}.{{data['network_name']}}.com/tls/ca.crt"
export CORE_PEER_ADDRESS="{{data['nodeIp']}}:{{calPeerNodePort(org_index, 0)}}"
set -x
peer channel update -o ${ORDERER_URL} -f /fabric/configtxgen/${CORE_PEER_LOCALMSPID}anchors.tx --ordererTLSHostnameOverride orderer.{{data['network_name']}}.com -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA} >&log.txt
res=$?
set +x
cat log.txt
verifyResult $res "Anchor peer ${CORE_PEER_ADDRESS} update failed"
echo "=== Anchor peers updated for org '${CORE_PEER_LOCALMSPID}' on channel '${CHANNEL_NAME}' ==="
echo
sleep $MAX_SLEEP

{% endfor %}
exit 0
